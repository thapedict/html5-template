/*!
* TS Grid System
* @version 1.0.0
* @author Thapelo Moeti
*/

$padding: 16px;
$gridPrefix: 'ts';

%container {
  display: block;
  width: auto;
  min-height: 1px;
  padding-left: $padding;
  padding-right: $padding;
  text-align: left;
}

/// Print out media queries
/// @param {number} $min minium screen size
/// @param {number} $max maximum screen size
/// @param $shorthand custom screen size identifier
@mixin responsiveQueries( $min: null, $max: null, $shorthand: '' ) {
  @if $min != null and $max != null {
    @media screen and (min-width: $min) and (max-width: $max) {
      @include columns($shorthand);
    }
  } @else {
    @if $min != null {
      @media screen and (min-width: $min) {
        @include columns($shorthand);
      }
    } @else {
      @media screen and (max-width: $max) {
        @include columns($shorthand);
      }
    }
  }
}

/// Handle splitting of child columns
/// @param {string} $short custom identifier
@mixin columns( $short: null ) {
  @if $short {
    $short: "-#{$short}";
  }

  $selector: ".#{$gridPrefix}#{$short}";

  #{$selector}-1,
  #{$selector}-1-2,
  #{$selector}-1-3,
  #{$selector}-2,
  #{$selector}-2-1,
  #{$selector}-3,
  #{$selector}-3-1,
  #{$selector}-4 {
    display: flex;
    flex-flow: row wrap;
    margin: 0;

    & > * {
      padding: $padding;
    }

    & > li {
      display: block;
    }
  }

  // Some splits I could have DRYed up, I know.
  // But for the sake of readability let's not.
  #{$selector}-1 > * {
    width: 100%;
  }

  #{$selector}-1-2 > * {
    width: 33.3%;
  }

  #{$selector}-1-2 > *:nth-child(2n) {
    width: 66.6%;
  }

  #{$selector}-1-3 > * {
    width: 25%;
  }

  #{$selector}-1-3 > *:nth-child(2n) {
    width: 75%;
  }

  #{$selector}-2 > * {
    width: 50%;
  }

  #{$selector}-2-1 > * {
    width: 66.6%;
  }

  #{$selector}-2-1 > *:nth-child(2n) {
    width: 33.3%;
  }

  #{$selector}-3 > * {
    width: 33.3%;
  }

  #{$selector}-3-1 > * {
    width: 75%;
  }

  #{$selector}-3-1 > *:nth-child(2n) {
    width: 25%;
  }
  
  #{$selector}-4 > * {
    width: 25%;
  }

  @include miscClasses($selector);
}

// Nice to have, but not really necessary
/// Misc Classes for everyday use 
/// @param {selector} prefix selector
@mixin miscClasses( $pre ) {
  #{$pre}-hidden {
    display: none;
  }

  #{$pre}-block {
    display: block;
  }

  #{$pre}-inline {
    display: inline-block;
  }
  
  #{$pre}-flex {
    display: flex;
  }
  
  #{$pre}-align-left {
    text-align: left;
  }
  
  #{$pre}-align-center {
    text-align: center;
  }
  
  #{$pre}-align-right {
    text-align: right;
  }
  
  #{$pre}-pad {
    padding: $padding;
  }
  
  #{$pre}-pad-kids > * {
    padding: $padding;
  }

  #{$pre}-margin {
    margin: $padding;
  }

  #{$pre}-margin-kids > * {
    margin: $padding;
  }
}

.container {
  @extend %container;
}

// All screens
@include columns();
// Large screens
@include responsiveQueries("1200px", null, "l");
// Desktop and Large screens
@include responsiveQueries("960px", null, "dl");
// Desktop
@include responsiveQueries("960px", "1199.9px", "d");
/* Not Small screens */
@include responsiveQueries("768px", null, "ns");
// Small and Medium screens
@include responsiveQueries(null, "959.9px", "sm");
// Medium screens
@include responsiveQueries("768px", "959.9px", "m");
// Small Screens
@include responsiveQueries(null, "767.9px", "s");
// Extra Small Screens
@include responsiveQueries(null, "424.9px", "xs");

